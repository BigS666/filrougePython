{
  "swagger": "2.0",
  "info": {
    "description": "#Author: _simon poirier_, **CS Project**, `MS SIO ` [website](https://exed.centralesupelec.fr/formation/mastere-specialise-ingenierie-des-systemes-informatiques-ouverts-2/).\n The docker hub repository : [dockerhub](https://hub.docker.com/repository/docker/bigs666/fil-rouge-repository)\n[github of the project](https://github.com/BigS666/filrougePython.git).\n\n#Description:\n  \n  You can pass one of the following type of files :\n  'txt', 'pdf', 'png', 'jpg', 'jpeg', 'gif','docx','csv','pptx'.\n  The extension of the file needs to be the real mimetype of the file.\n  The file must be less than 5MB\n  The file is stored on a private S3 Bucket belonging to Simon Poirier : `filrouge-poirier`\n If the S3 upload is a success and the file is a jpeg or a png file, it will be analyzed by `Amazon Reckognition`\n\nCurl sample command in a local instance:\n\n```\ncurl POST \"http://{host}:{port}/document\"  -F \"mydata=@mondoc.txt\"\n  ```\n Host can be `filrougev2.spo.p2021.ajoga.fr` or `filrougev1.spo.p2021.ajoga.fr` or anoher version\n port could be `80,8080 or 443`. \n\nReturn sample:\n\n```json\n{\n  \"SecuredFileName\": \"mondoc.txt\",\n  \"content\": \"Un document texte de test\",\n  \"message\": \"File successfully analyzed\",\n  \"metasdatas\": {\n    \"creation_date\": \"Sat Mar  6 21:08:15 2021\",\n    \"last_modified_date\": \"Sat Mar  6 21:08:15 2021\",\n    \"nomber_of_caraters\": 25,\n    \"nomber_of_lignes\": 1\n  },\n  \"mimetype\": \"text/plain\",\n  \"s3-uploaded\": true,\n  \"size\": \"25.0 B\"\n}\n```\n",
    "version": "1.0.0",
    "title": "FilRouge : Upload to S3 and describes a document"
  },
  "tags": [
    {
      "name": "FilRouge",
      "description": "API for uploading documents of various types, to a S3 bucket private bucket, and return its metadatas"
    }
  ],
  "paths": {
    "/document": {
      "post": {
        "tags": [
          "FilRouge"
        ],
        "summary": "Upload to S3, returns Metadatas",
        "operationId": "uploadFile",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mydata",
            "in": "formData",
            "description": "file to upload",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response : File analyzed",
            "schema": {
              "$ref": "#/definitions/success"
            }
          },
          "400": {
            "description": "Failed Upload, see error message.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "success": {
      "type": "object",
      "required": [
        "message",
        "metadatas",
        "size",
        "s3-uploaded",
        "mimetype",
        "SecuredFileName",
        "content"
      ],
      "properties": {
        "message": {
          "type": "string",
          "description": "status",
          "example":"File successfully analyzed"
        },
        "metadatas": {
          "type": "object",
          "required": [
            "last_modified_date",
            "creation_date"
          ],
          "description": "additional metadatas of the file, depending of the file mimetype",
          "properties": {
            "last_modified_date": {
              "type": "string",
              "format": "date-time",
              "description": "Last modification date of the file"
            },
            "creation_date": {
              "type": "string",
              "format": "date-time",
              "description": "Creation date of the file"
            },
            "number_of_pages": {
              "type": "integer",
              "format": "int32",
              "description": "Number of pages",
              "example" : 5
            },
            "number_of_lignes": {
              "type": "integer",
              "format": "int32",
              "description": "Number of lignes",
              "example" : 12
            },
            "author": {
              "type": "string",
              "description": "Author of the pdf",
              "example" : "Auteur"
            },
            "creator": {
              "type": "string",
              "description": "Creator of the pdf",
              "example" : "Le createur"
            },
            "producer": {
              "type": "string",
              "description": "Producer of the pdf",
              "example" : "The producer"
            },
            "subject": {
              "type": "string",
              "description": "Subject of the pdf",
              "example" : "Mon sujet"
            },
            "title": {
              "type": "string",
              "description": "Title of the pdf",
              "example" : "Titre"
            },
            "size": {
              "type": "string",
              "description": "Dimensions of an image ex: (200,300)",
              "example" : "(800,600)"
            },
            "mode": {
              "type": "string",
              "description": "mode of an image, ex :RGB",
              "example" : "RGB"
            },
            "dpi": {
              "type": "string",
              "description": "Points per inche of an image ex: (300,300)",
              "example" : "(300,300)"
            },
            "duration": {
              "type": "integer",
              "format": "int32",
              "description": "Duration of a gif",
              "example" : 2
            },
            "rekognition_labels": {
              "type": "array",
              "items": {
                "type": "object",
                "example": {
                  "Confidence": 99.84239959716797,
                  "Instances": [],
                  "Name": "Metropolis",
                  "Parents": [
                    {
                      "Name": "City"
                    },
                    {
                      "Name": "Urban"
                    },
                    {
                      "Name": "Building"
                    }
                  ]
              }
              }
            }
          }
        },
        "size": {
          "type": "string",
          "description": "Size of the file, ex: 3.2MB",
          "example" : "3.2MB"
        },
        "s3-uploaded": {
          "type": "boolean",
          "description": "Is the file is successfully uploaded to the S3 bucket"
        },
        "mimetype": {
          "type": "string",
          "description": "Mimitype of the analyzed file",
          "example" : "image/jpeg"
        },
        "SecuredFileName": {
          "type": "string",
          "description": "Name secured for file system, used for the S3 upload",
          "example" : "monimage.jpg"
        },
        "content": {
          "type": "string",
          "description": "Stringed content of the file, base64 encoded for binary files",
          "example" : "le contenu de mon fichier"
        }
      }
    },
    "error": {
      "type": "object",
      "description": "Message d'erreur 400 : Bad request message",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string",
          "description": "The possible error",
          "example": "Allowed file types are txt, pdf, png, jpg, jpeg, pptx, gif, docx, csv"
        }
      }
    }
  }
}